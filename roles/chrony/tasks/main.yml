- name: Remove ntp ｜ Debian
  shell: 'apt remove -y ntp'
  ignore_errors: true
  when: ansible_distribution in ["Ubuntu","Debian"]

- name: Remove ntp ｜ CentOS
  shell: 'yum remove -y ntp'
  args:
    warn: false
  ignore_errors: true
  when: ansible_distribution in ['CentOS','RedHat','EulerOS']

- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
    - "/etc/chrony"
    - "/var/lib/chrony"
    - "/var/log/chrony"

- name: Check if chrony is installed | Debian
  shell: "sudo dpkg -l | grep chrony | xargs echo check:"
  register: debian_chrony_status
  ignore_errors: true
  when: ansible_distribution in ["Ubuntu","Debian"]

- name: Check if chrony is installed | CentOS
  shell: "rpm -qa |grep chrony|xargs echo check:"
  register: centos_chrony_status
  ignore_errors: true
  when: ansible_distribution in ['CentOS','RedHat','EulerOS']

- name: stop chronyd service
  shell: 'systemctl stop chronyd && rm -rf /var/run/chrony'
  ignore_errors: true
  when: '"chrony" in centos_chrony_status.stdout or "chrony" in debian_chrony_status.stdout'

- block:
  - name: Download chrony package | Debian
    get_url:
      validate_certs: no
      url: "{{ chrony_download_url }}"
      dest: "{{ base_dir }}/packages"
      timeout: "{{ download_timeout_online }}"
      mode: 0755

  - name: unarchive chrony package | Debian
    unarchive:
      validate_certs: no
      src: "{{ base_dir }}/packages/chrony_{{ chrony_version }}_{{ ansible_architecture }}.tar.gz"
      dest: "{{ base_dir }}/packages"
      remote_src: yes

  - name: Copy chronyd file  | Debian
    copy: src={{ base_dir }}/packages/{{item}} dest=/usr/sbin/ mode=0755 remote_src=yes
    with_items:
      - "chrony/sbin/chronyd"
      - "chrony/bin/chronyc"

- name: Create chrony.service file  | Debian
  template: src=chronyd.service.j2 dest=/lib/systemd/system/chronyd.service

- block:
  - name: Setup chrony server
    template:
      src: server.conf.j2
      dest: /etc/chrony/chrony.conf

  - name: Start chorny server
    shell: systemctl daemon-reload && systemctl restart chronyd
    ignore_errors: true

  when: inventory_hostname == groups['chrony'][0]

- block:
  - name: Config chrony client
    template:
      src: client.conf.j2
      dest: /etc/chrony/chrony.conf

  - name: Start chorny client
    shell: systemctl daemon-reload && systemctl restart chronyd
    ignore_errors: true

  - name: Calibration time server
    shell: "sudo chronyc tracking"

  - name: Active sync time
    shell: "sudo chronyc -a makestep"
    when: ansible_user == "root"
  when: 'inventory_hostname != groups.chrony[0]'
