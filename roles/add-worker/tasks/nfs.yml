- block:
    - name: Download nfs-utils package | CentOS
      get_url:
        validate_certs: no
        url: "{{ nfs_rpm_download_url }}"
        dest: "{{ base_dir }}/packages"
        timeout: "{{ download_timeout_online }}"

    - name: Unarchive nfs-utils package | CentOS
      unarchive:
        src: "{{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_major_version }}_nfs_{{ ansible_architecture }}.tar.gz"
        dest: "{{ base_dir }}/packages"
        remote_src: yes

    - name: Install base package | CentOS
      shell: "rpm -ivh {{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_major_version }}_nfs/*.rpm --nodeps --force"
  when: ansible_distribution in [ 'CentOS','RedHat','EulerOS' ]

- block:
  - name: Download nfs-utils package | Debian
    get_url:
      validate_certs: no
      url: "{{ nfs_deb_download_url }}"
      dest: "{{ base_dir }}/packages"
      timeout: "{{ download_timeout_online }}"

  - name: Unarchive nfs-utils package | Debian
    unarchive:
      src: "{{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_release }}_nfs_{{ ansible_architecture }}.tar.gz"
      dest: "{{ base_dir }}/packages"
      remote_src: yes

  - name: Install nfs-utils package | Debian
    shell: "sudo dpkg -i {{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_release }}_nfs/*.deb"
    ignore_errors: true
  when: ansible_distribution in [ 'Ubuntu','Debian' ]

- block:
    - name: NFS| set defaultvers
      replace:
        path: /etc/nfsmount.conf
        regexp: '# Defaultvers=4'
        replace: "Defaultvers=3"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['all'] }}"

    - name: set nfsvers
      replace:
        path: /etc/nfsmount.conf
        regexp: '# Nfsvers=4'
        replace: "Nfsvers=3"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['all'] }}"

    - name: NFS| set nfslock
      replace:
        path: /etc/nfsmount.conf
        regexp: '# Lock=True'
        replace: "Lock=False"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['all'] }}"
  when:
    - storage_nfs_server_version is defined and storage_nfs_server_version == "3"
  ignore_errors: true