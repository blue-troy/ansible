- name: Status firewalld
  shell: >
    systemctl status ufw | grep active || echo "not be found"
  register: ufw_already_installed

- name: Debian |Disable UFW
  service:
    name: ufw
    state: stopped
    enabled: no
  when: '"active" in ufw_already_installed.stdout'

# 安装基础组件
- name: Download base package | Debian
  get_url:
    validate_certs: no
    url: "{{ base_deb_download_url }}"
    dest: "{{ base_dir }}/packages"
    timeout: "{{ download_timeout_online }}"

- name: Unarchive base package | Debian
  unarchive:
    src: "{{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_release }}_base_{{ ansible_architecture }}.tar.gz"
    dest: "{{ base_dir }}/packages"
    remote_src: yes

- name: Install base package | Debian
  shell: "dpkg -i {{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_release }}_base/*.deb"
  ignore_errors: true

- block:
# 安装 ipvs
  - name: Download ipvs package | Debian
    get_url:
      validate_certs: no
      url: "{{ ipvs_deb_download_url }}"
      dest: "{{ base_dir }}/packages"
      timeout: "{{ download_timeout_online }}"

  - name: Unarchive ipvs package | Debian
    unarchive:
      src: "{{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_release }}_ipvs_{{ ansible_architecture }}.tar.gz"
      dest: "{{ base_dir }}/packages"
      remote_src: yes

  - name: Install ipvs package | Debian
    shell: "dpkg -i {{ base_dir }}/packages/{{ ansible_distribution }}_{{ ansible_distribution_release }}_ipvs/*.deb"
    ignore_errors: true
  when: kube_proxy_mode == "ipvs"

- name: Disable rsyslog Get journald log 2
  lineinfile:
    dest: /etc/rsyslog.conf
    state: present
    regexp: 'IMJournalStateFile'
    line: '#$IMJournalStateFile imjournal.state'

- name: Restart rsyslog service
  service:
    name: rsyslog
    state: restarted
  ignore_errors: true